{
  inputs.nixpkgs.url = "github:NixOS/nixpkgs/nixos-23.05";
  inputs.flake-utils.url = "github:numtide/flake-utils";

  outputs = {
    self,
    nixpkgs,
    flake-utils,
  }:
    flake-utils.lib.eachDefaultSystem (system: let
      pkgs = nixpkgs.legacyPackages.${system};
    in {
      apps.alejandra = { type = "app"; program = "${pkgs.alejandra}/bin/alejandra"; };
      packages.alejandra = pkgs.alejandra;
      apps.amdgpu_top = { type = "app"; program = "${pkgs.amdgpu_top}/bin/amdgpu_top"; };
      packages.amdgpu_top = pkgs.amdgpu_top;
      apps.aria2c = { type = "app"; program = "${pkgs.aria}/bin/aria2c"; };
      packages.aria2c = pkgs.aria;
      apps.AtomicParsley = { type = "app"; program = "${pkgs.atomicparsley}/bin/AtomicParsley"; };
      packages.AtomicParsley = pkgs.atomicparsley;
      apps.atuin = { type = "app"; program = "${pkgs.atuin}/bin/atuin"; };
      packages.atuin = pkgs.atuin;
      apps.az = { type = "app"; program = "${pkgs.azure-cli}/bin/az"; };
      packages.az = pkgs.azure-cli;
      apps."azps.ps1" = { type = "app"; program = "${pkgs.azure-cli}/bin/azps.ps1"; };
      packages."azps.ps1" = pkgs.azure-cli;
      apps.bashate = { type = "app"; program = "${pkgs.bashate}/bin/bashate"; };
      packages.bashate = pkgs.bashate;
      apps.bw = { type = "app"; program = "${pkgs.bitwarden-cli}/lib/node_modules/.bin/bw"; };
      packages.bw = pkgs.bitwarden-cli;
      apps.black = { type = "app"; program = "${pkgs.black}/bin/black"; };
      packages.black = pkgs.black;
      apps.blackd = { type = "app"; program = "${pkgs.black}/bin/blackd"; };
      packages.blackd = pkgs.black;
      apps.btop = { type = "app"; program = "${pkgs.btop}/bin/btop"; };
      packages.btop = pkgs.btop;
      apps.brightnessctl = { type = "app"; program = "${pkgs.brightnessctl}/bin/brightnessctl"; };
      packages.brightnessctl = pkgs.brightnessctl;
      apps.chars = { type = "app"; program = "${pkgs.chars}/bin/chars"; };
      packages.chars = pkgs.chars;
      apps.cicero = { type = "app"; program = "${pkgs.cicero-tui}/bin/cicero"; };
      packages.cicero = pkgs.cicero-tui;
      apps.csvs-to-sqlite = { type = "app"; program = "${pkgs.csvs-to-sqlite}/bin/csvs-to-sqlite"; };
      packages.csvs-to-sqlite = pkgs.csvs-to-sqlite;
      apps.dbeaver = { type = "app"; program = "${pkgs.dbeaver}/bin/dbeaver"; };
      packages.dbeaver = pkgs.dbeaver;
      apps.deno = { type = "app"; program = "${pkgs.deno}/bin/deno"; };
      packages.deno = pkgs.deno;
      apps.dialog = { type = "app"; program = "${pkgs.dialog}/bin/dialog"; };
      packages.dialog = pkgs.dialog;
      apps.delv = { type = "app"; program = "${pkgs.dig}/bin/delv"; };
      packages.delv = pkgs.dig;
      apps.dig = { type = "app"; program = "${pkgs.dig}/bin/dig"; };
      packages.dig = pkgs.dig;
      apps.nslookup = { type = "app"; program = "${pkgs.dig}/bin/nslookup"; };
      packages.nslookup = pkgs.dig;
      apps.nsupdate = { type = "app"; program = "${pkgs.dig}/bin/nsupdate"; };
      packages.nsupdate = pkgs.dig;
      apps.dive = { type = "app"; program = "${pkgs.dive}/bin/dive"; };
      packages.dive = pkgs.dive;
      apps.docker-buildx = { type = "app"; program = "${pkgs.docker-buildx}/bin/docker-buildx"; };
      packages.docker-buildx = pkgs.docker-buildx;
      apps.docker = { type = "app"; program = "${pkgs.docker-client}/bin/docker"; };
      packages.docker = pkgs.docker-client;
      apps.docker-compose = { type = "app"; program = "${pkgs.docker-compose}/bin/docker-compose"; };
      packages.docker-compose = pkgs.docker-compose;
      apps.fab = { type = "app"; program = "${pkgs.Fabric}/bin/fab"; };
      packages.fab = pkgs.Fabric;
      apps.fossil = { type = "app"; program = "${pkgs.fossil}/bin/fossil"; };
      packages.fossil = pkgs.fossil;
      apps.git-credential-libsecret = { type = "app"; program = "${pkgs.gitFull}/bin/git-credential-libsecret"; };
      packages.git-credential-libsecret = pkgs.gitFull;
      apps.git-credential-netrc = { type = "app"; program = "${pkgs.gitFull}/bin/git-credential-netrc"; };
      packages.git-credential-netrc = pkgs.gitFull;
      apps.git-cvsserver = { type = "app"; program = "${pkgs.gitFull}/bin/git-cvsserver"; };
      packages.git-cvsserver = pkgs.gitFull;
      apps.git-http-backend = { type = "app"; program = "${pkgs.gitFull}/bin/git-http-backend"; };
      packages.git-http-backend = pkgs.gitFull;
      apps.git-jump = { type = "app"; program = "${pkgs.gitFull}/bin/git-jump"; };
      packages.git-jump = pkgs.gitFull;
      apps.git-receive-pack = { type = "app"; program = "${pkgs.gitFull}/bin/git-receive-pack"; };
      packages.git-receive-pack = pkgs.gitFull;
      apps.git-shell = { type = "app"; program = "${pkgs.gitFull}/bin/git-shell"; };
      packages.git-shell = pkgs.gitFull;
      apps.git-upload-archive = { type = "app"; program = "${pkgs.gitFull}/bin/git-upload-archive"; };
      packages.git-upload-archive = pkgs.gitFull;
      apps.git-upload-pack = { type = "app"; program = "${pkgs.gitFull}/bin/git-upload-pack"; };
      packages.git-upload-pack = pkgs.gitFull;
      apps.gitk = { type = "app"; program = "${pkgs.gitFull}/bin/gitk"; };
      packages.gitk = pkgs.gitFull;
      apps.scalar = { type = "app"; program = "${pkgs.gitFull}/bin/scalar"; };
      packages.scalar = pkgs.gitFull;
      apps.git-lfs = { type = "app"; program = "${pkgs.git-lfs}/bin/git-lfs"; };
      packages.git-lfs = pkgs.git-lfs;
      apps.zenity = { type = "app"; program = "${pkgs.gnome.zenity}/bin/zenity"; };
      packages.zenity = pkgs.gnome.zenity;
      apps.patch = { type = "app"; program = "${pkgs.gnupatch}/bin/patch"; };
      packages.patch = pkgs.gnupatch;
      apps.acyclic = { type = "app"; program = "${pkgs.graphviz}/bin/acyclic"; };
      packages.acyclic = pkgs.graphviz;
      apps.bcomps = { type = "app"; program = "${pkgs.graphviz}/bin/bcomps"; };
      packages.bcomps = pkgs.graphviz;
      apps.ccomps = { type = "app"; program = "${pkgs.graphviz}/bin/ccomps"; };
      packages.ccomps = pkgs.graphviz;
      apps.circo = { type = "app"; program = "${pkgs.graphviz}/bin/circo"; };
      packages.circo = pkgs.graphviz;
      apps.cluster = { type = "app"; program = "${pkgs.graphviz}/bin/cluster"; };
      packages.cluster = pkgs.graphviz;
      apps.diffimg = { type = "app"; program = "${pkgs.graphviz}/bin/diffimg"; };
      packages.diffimg = pkgs.graphviz;
      apps.dijkstra = { type = "app"; program = "${pkgs.graphviz}/bin/dijkstra"; };
      packages.dijkstra = pkgs.graphviz;
      apps.dot = { type = "app"; program = "${pkgs.graphviz}/bin/dot"; };
      packages.dot = pkgs.graphviz;
      apps.dot2gxl = { type = "app"; program = "${pkgs.graphviz}/bin/dot2gxl"; };
      packages.dot2gxl = pkgs.graphviz;
      apps.dot_builtins = { type = "app"; program = "${pkgs.graphviz}/bin/dot_builtins"; };
      packages.dot_builtins = pkgs.graphviz;
      apps.edgepaint = { type = "app"; program = "${pkgs.graphviz}/bin/edgepaint"; };
      packages.edgepaint = pkgs.graphviz;
      apps.fdp = { type = "app"; program = "${pkgs.graphviz}/bin/fdp"; };
      packages.fdp = pkgs.graphviz;
      apps.gc = { type = "app"; program = "${pkgs.graphviz}/bin/gc"; };
      packages.gc = pkgs.graphviz;
      apps.gml2gv = { type = "app"; program = "${pkgs.graphviz}/bin/gml2gv"; };
      packages.gml2gv = pkgs.graphviz;
      apps.graphml2gv = { type = "app"; program = "${pkgs.graphviz}/bin/graphml2gv"; };
      packages.graphml2gv = pkgs.graphviz;
      apps.gv2gml = { type = "app"; program = "${pkgs.graphviz}/bin/gv2gml"; };
      packages.gv2gml = pkgs.graphviz;
      apps.gv2gxl = { type = "app"; program = "${pkgs.graphviz}/bin/gv2gxl"; };
      packages.gv2gxl = pkgs.graphviz;
      apps.gvcolor = { type = "app"; program = "${pkgs.graphviz}/bin/gvcolor"; };
      packages.gvcolor = pkgs.graphviz;
      apps.gvgen = { type = "app"; program = "${pkgs.graphviz}/bin/gvgen"; };
      packages.gvgen = pkgs.graphviz;
      apps.gvmap = { type = "app"; program = "${pkgs.graphviz}/bin/gvmap"; };
      packages.gvmap = pkgs.graphviz;
      apps."gvmap.sh" = { type = "app"; program = "${pkgs.graphviz}/bin/gvmap.sh"; };
      packages."gvmap.sh" = pkgs.graphviz;
      apps.gvpack = { type = "app"; program = "${pkgs.graphviz}/bin/gvpack"; };
      packages.gvpack = pkgs.graphviz;
      apps.gvpr = { type = "app"; program = "${pkgs.graphviz}/bin/gvpr"; };
      packages.gvpr = pkgs.graphviz;
      apps.gxl2dot = { type = "app"; program = "${pkgs.graphviz}/bin/gxl2dot"; };
      packages.gxl2dot = pkgs.graphviz;
      apps.gxl2gv = { type = "app"; program = "${pkgs.graphviz}/bin/gxl2gv"; };
      packages.gxl2gv = pkgs.graphviz;
      apps.mm2gv = { type = "app"; program = "${pkgs.graphviz}/bin/mm2gv"; };
      packages.mm2gv = pkgs.graphviz;
      apps.neato = { type = "app"; program = "${pkgs.graphviz}/bin/neato"; };
      packages.neato = pkgs.graphviz;
      apps.nop = { type = "app"; program = "${pkgs.graphviz}/bin/nop"; };
      packages.nop = pkgs.graphviz;
      apps.osage = { type = "app"; program = "${pkgs.graphviz}/bin/osage"; };
      packages.osage = pkgs.graphviz;
      apps.patchwork = { type = "app"; program = "${pkgs.graphviz}/bin/patchwork"; };
      packages.patchwork = pkgs.graphviz;
      apps.prune = { type = "app"; program = "${pkgs.graphviz}/bin/prune"; };
      packages.prune = pkgs.graphviz;
      apps.sccmap = { type = "app"; program = "${pkgs.graphviz}/bin/sccmap"; };
      packages.sccmap = pkgs.graphviz;
      apps.sfdp = { type = "app"; program = "${pkgs.graphviz}/bin/sfdp"; };
      packages.sfdp = pkgs.graphviz;
      apps.tred = { type = "app"; program = "${pkgs.graphviz}/bin/tred"; };
      packages.tred = pkgs.graphviz;
      apps.twopi = { type = "app"; program = "${pkgs.graphviz}/bin/twopi"; };
      packages.twopi = pkgs.graphviz;
      apps.unflatten = { type = "app"; program = "${pkgs.graphviz}/bin/unflatten"; };
      packages.unflatten = pkgs.graphviz;
      apps.vimdot = { type = "app"; program = "${pkgs.graphviz}/bin/vimdot"; };
      packages.vimdot = pkgs.graphviz;
      apps.helvum = { type = "app"; program = "${pkgs.helvum}/bin/helvum"; };
      packages.helvum = pkgs.helvum;
      apps.hivemind = { type = "app"; program = "${pkgs.hivemind}/bin/hivemind"; };
      packages.hivemind = pkgs.hivemind;
      apps.honcho = { type = "app"; program = "${pkgs.honcho}/bin/honcho"; };
      packages.honcho = pkgs.honcho;
      apps.htop = { type = "app"; program = "${pkgs.htop}/bin/htop"; };
      packages.htop = pkgs.htop;
      apps.hwloc-annotate = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-annotate"; };
      packages.hwloc-annotate = pkgs.hwloc;
      apps.hwloc-bind = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-bind"; };
      packages.hwloc-bind = pkgs.hwloc;
      apps.hwloc-calc = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-calc"; };
      packages.hwloc-calc = pkgs.hwloc;
      apps.hwloc-compress-dir = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-compress-dir"; };
      packages.hwloc-compress-dir = pkgs.hwloc;
      apps.hwloc-diff = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-diff"; };
      packages.hwloc-diff = pkgs.hwloc;
      apps.hwloc-distrib = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-distrib"; };
      packages.hwloc-distrib = pkgs.hwloc;
      apps.hwloc-dump-hwdata = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-dump-hwdata"; };
      packages.hwloc-dump-hwdata = pkgs.hwloc;
      apps.hwloc-gather-cpuid = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-gather-cpuid"; };
      packages.hwloc-gather-cpuid = pkgs.hwloc;
      apps.hwloc-gather-topology = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-gather-topology"; };
      packages.hwloc-gather-topology = pkgs.hwloc;
      apps.hwloc-info = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-info"; };
      packages.hwloc-info = pkgs.hwloc;
      apps.hwloc-ls = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-ls"; };
      packages.hwloc-ls = pkgs.hwloc;
      apps.hwloc-patch = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-patch"; };
      packages.hwloc-patch = pkgs.hwloc;
      apps.hwloc-ps = { type = "app"; program = "${pkgs.hwloc}/bin/hwloc-ps"; };
      packages.hwloc-ps = pkgs.hwloc;
      apps.lstopo = { type = "app"; program = "${pkgs.hwloc}/bin/lstopo"; };
      packages.lstopo = pkgs.hwloc;
      apps.lstopo-no-graphics = { type = "app"; program = "${pkgs.hwloc}/bin/lstopo-no-graphics"; };
      packages.lstopo-no-graphics = pkgs.hwloc;
      apps.netloc_draw_to_json = { type = "app"; program = "${pkgs.hwloc}/bin/netloc_draw_to_json"; };
      packages.netloc_draw_to_json = pkgs.hwloc;
      apps.netloc_ib_extract_dats = { type = "app"; program = "${pkgs.hwloc}/bin/netloc_ib_extract_dats"; };
      packages.netloc_ib_extract_dats = pkgs.hwloc;
      apps.netloc_ib_gather_raw = { type = "app"; program = "${pkgs.hwloc}/bin/netloc_ib_gather_raw"; };
      packages.netloc_ib_gather_raw = pkgs.hwloc;
      apps.kubectl = { type = "app"; program = "${pkgs.kubectl}/bin/kubectl"; };
      packages.kubectl = pkgs.kubectl;
      apps.kubectl-tree = { type = "app"; program = "${pkgs.kubectl-tree}/bin/kubectl-tree"; };
      packages.kubectl-tree = pkgs.kubectl-tree;
      apps.convertfilestopdf = { type = "app"; program = "${pkgs.leptonica}/bin/convertfilestopdf"; };
      packages.convertfilestopdf = pkgs.leptonica;
      apps.convertfilestops = { type = "app"; program = "${pkgs.leptonica}/bin/convertfilestops"; };
      packages.convertfilestops = pkgs.leptonica;
      apps.convertformat = { type = "app"; program = "${pkgs.leptonica}/bin/convertformat"; };
      packages.convertformat = pkgs.leptonica;
      apps.convertsegfilestopdf = { type = "app"; program = "${pkgs.leptonica}/bin/convertsegfilestopdf"; };
      packages.convertsegfilestopdf = pkgs.leptonica;
      apps.convertsegfilestops = { type = "app"; program = "${pkgs.leptonica}/bin/convertsegfilestops"; };
      packages.convertsegfilestops = pkgs.leptonica;
      apps.converttopdf = { type = "app"; program = "${pkgs.leptonica}/bin/converttopdf"; };
      packages.converttopdf = pkgs.leptonica;
      apps.converttops = { type = "app"; program = "${pkgs.leptonica}/bin/converttops"; };
      packages.converttops = pkgs.leptonica;
      apps.fileinfo = { type = "app"; program = "${pkgs.leptonica}/bin/fileinfo"; };
      packages.fileinfo = pkgs.leptonica;
      apps.imagetops = { type = "app"; program = "${pkgs.leptonica}/bin/imagetops"; };
      packages.imagetops = pkgs.leptonica;
      apps.xtractprotos = { type = "app"; program = "${pkgs.leptonica}/bin/xtractprotos"; };
      packages.xtractprotos = pkgs.leptonica;
      apps.benchmark_xl = { type = "app"; program = "${pkgs.libjxl}/bin/benchmark_xl"; };
      packages.benchmark_xl = pkgs.libjxl;
      apps.cjpeg_hdr = { type = "app"; program = "${pkgs.libjxl}/bin/cjpeg_hdr"; };
      packages.cjpeg_hdr = pkgs.libjxl;
      apps.cjxl = { type = "app"; program = "${pkgs.libjxl}/bin/cjxl"; };
      packages.cjxl = pkgs.libjxl;
      apps.djxl = { type = "app"; program = "${pkgs.libjxl}/bin/djxl"; };
      packages.djxl = pkgs.libjxl;
      apps.jxlinfo = { type = "app"; program = "${pkgs.libjxl}/bin/jxlinfo"; };
      packages.jxlinfo = pkgs.libjxl;
      apps.uchardet = { type = "app"; program = "${pkgs.libuchardet}/bin/uchardet"; };
      packages.uchardet = pkgs.libuchardet;
      apps.cwebp = { type = "app"; program = "${pkgs.libwebp}/bin/cwebp"; };
      packages.cwebp = pkgs.libwebp;
      apps.dwebp = { type = "app"; program = "${pkgs.libwebp}/bin/dwebp"; };
      packages.dwebp = pkgs.libwebp;
      apps.gif2webp = { type = "app"; program = "${pkgs.libwebp}/bin/gif2webp"; };
      packages.gif2webp = pkgs.libwebp;
      apps.img2webp = { type = "app"; program = "${pkgs.libwebp}/bin/img2webp"; };
      packages.img2webp = pkgs.libwebp;
      apps.webpinfo = { type = "app"; program = "${pkgs.libwebp}/bin/webpinfo"; };
      packages.webpinfo = pkgs.libwebp;
      apps.webpmux = { type = "app"; program = "${pkgs.libwebp}/bin/webpmux"; };
      packages.webpmux = pkgs.libwebp;
      apps.light = { type = "app"; program = "${pkgs.light}/bin/light"; };
      packages.light = pkgs.light;
      apps.lnav = { type = "app"; program = "${pkgs.lnav}/bin/lnav"; };
      packages.lnav = pkgs.lnav;
      apps.lurk = { type = "app"; program = "${pkgs.lurk}/bin/lurk"; };
      packages.lurk = pkgs.lurk;
      apps.external-ip = { type = "app"; program = "${pkgs.miniupnpc}/bin/external-ip"; };
      packages.external-ip = pkgs.miniupnpc;
      apps.upnpc = { type = "app"; program = "${pkgs.miniupnpc}/bin/upnpc"; };
      packages.upnpc = pkgs.miniupnpc;
      apps.mosh = { type = "app"; program = "${pkgs.mosh}/bin/mosh"; };
      packages.mosh = pkgs.mosh;
      apps.mosh-client = { type = "app"; program = "${pkgs.mosh}/bin/mosh-client"; };
      packages.mosh-client = pkgs.mosh;
      apps.mosh-server = { type = "app"; program = "${pkgs.mosh}/bin/mosh-server"; };
      packages.mosh-server = pkgs.mosh;
      apps.ncdu = { type = "app"; program = "${pkgs.ncdu}/bin/ncdu"; };
      packages.ncdu = pkgs.ncdu;
      apps.ncpamixer = { type = "app"; program = "${pkgs.ncpamixer}/bin/ncpamixer"; };
      packages.ncpamixer = pkgs.ncpamixer;
      apps.NetworkManager = { type = "app"; program = "${pkgs.networkmanager}/bin/NetworkManager"; };
      packages.NetworkManager = pkgs.networkmanager;
      apps.nm-online = { type = "app"; program = "${pkgs.networkmanager}/bin/nm-online"; };
      packages.nm-online = pkgs.networkmanager;
      apps.nmcli = { type = "app"; program = "${pkgs.networkmanager}/bin/nmcli"; };
      packages.nmcli = pkgs.networkmanager;
      apps.nmtui = { type = "app"; program = "${pkgs.networkmanager}/bin/nmtui"; };
      packages.nmtui = pkgs.networkmanager;
      apps.nmtui-connect = { type = "app"; program = "${pkgs.networkmanager}/bin/nmtui-connect"; };
      packages.nmtui-connect = pkgs.networkmanager;
      apps.nmtui-edit = { type = "app"; program = "${pkgs.networkmanager}/bin/nmtui-edit"; };
      packages.nmtui-edit = pkgs.networkmanager;
      apps.nmtui-hostname = { type = "app"; program = "${pkgs.networkmanager}/bin/nmtui-hostname"; };
      packages.nmtui-hostname = pkgs.networkmanager;
      apps.whiptail = { type = "app"; program = "${pkgs.newt}/bin/whiptail"; };
      packages.whiptail = pkgs.newt;
      apps.nip2 = { type = "app"; program = "${pkgs.nip2}/bin/nip2"; };
      packages.nip2 = pkgs.nip2;
      apps.nix-build = { type = "app"; program = "${pkgs.nix}/bin/nix-build"; };
      packages.nix-build = pkgs.nix;
      apps.nix-channel = { type = "app"; program = "${pkgs.nix}/bin/nix-channel"; };
      packages.nix-channel = pkgs.nix;
      apps.nix-collect-garbage = { type = "app"; program = "${pkgs.nix}/bin/nix-collect-garbage"; };
      packages.nix-collect-garbage = pkgs.nix;
      apps.nix-copy-closure = { type = "app"; program = "${pkgs.nix}/bin/nix-copy-closure"; };
      packages.nix-copy-closure = pkgs.nix;
      apps.nix-daemon = { type = "app"; program = "${pkgs.nix}/bin/nix-daemon"; };
      packages.nix-daemon = pkgs.nix;
      apps.nix-env = { type = "app"; program = "${pkgs.nix}/bin/nix-env"; };
      packages.nix-env = pkgs.nix;
      apps.nix-hash = { type = "app"; program = "${pkgs.nix}/bin/nix-hash"; };
      packages.nix-hash = pkgs.nix;
      apps.nix-instantiate = { type = "app"; program = "${pkgs.nix}/bin/nix-instantiate"; };
      packages.nix-instantiate = pkgs.nix;
      apps.nix-prefetch-url = { type = "app"; program = "${pkgs.nix}/bin/nix-prefetch-url"; };
      packages.nix-prefetch-url = pkgs.nix;
      apps.nix-shell = { type = "app"; program = "${pkgs.nix}/bin/nix-shell"; };
      packages.nix-shell = pkgs.nix;
      apps.nix-store = { type = "app"; program = "${pkgs.nix}/bin/nix-store"; };
      packages.nix-store = pkgs.nix;
      apps.nix-bundle = { type = "app"; program = "${pkgs.nix-bundle}/bin/nix-bundle"; };
      packages.nix-bundle = pkgs.nix-bundle;
      apps.nix-run = { type = "app"; program = "${pkgs.nix-bundle}/bin/nix-run"; };
      packages.nix-run = pkgs.nix-bundle;
      apps.nix-channel-index = { type = "app"; program = "${pkgs.nix-index}/bin/nix-channel-index"; };
      packages.nix-channel-index = pkgs.nix-index;
      apps.nix-locate = { type = "app"; program = "${pkgs.nix-index}/bin/nix-locate"; };
      packages.nix-locate = pkgs.nix-index;
      apps.nix-index = { type = "app"; program = "${pkgs.nix-index}/bin/nix-index"; };
      packages.nix-index = pkgs.nix-index;
      apps.nix-tree = { type = "app"; program = "${pkgs.nix-tree}/bin/nix-tree"; };
      packages.nix-tree = pkgs.nix-tree;
      apps.eslint = { type = "app"; program = "${pkgs.nodePackages.eslint}/lib/node_modules/.bin/eslint"; };
      packages.eslint = pkgs.nodePackages.eslint;
      apps.prettier = { type = "app"; program = "${pkgs.nodePackages.prettier}/lib/node_modules/.bin/prettier"; };
      packages.prettier = pkgs.nodePackages.prettier;
      apps.memhog = { type = "app"; program = "${pkgs.numactl}/bin/memhog"; };
      packages.memhog = pkgs.numactl;
      apps.migratepages = { type = "app"; program = "${pkgs.numactl}/bin/migratepages"; };
      packages.migratepages = pkgs.numactl;
      apps.migspeed = { type = "app"; program = "${pkgs.numactl}/bin/migspeed"; };
      packages.migspeed = pkgs.numactl;
      apps.numactl = { type = "app"; program = "${pkgs.numactl}/bin/numactl"; };
      packages.numactl = pkgs.numactl;
      apps.numademo = { type = "app"; program = "${pkgs.numactl}/bin/numademo"; };
      packages.numademo = pkgs.numactl;
      apps.numastat = { type = "app"; program = "${pkgs.numactl}/bin/numastat"; };
      packages.numastat = pkgs.numactl;
      apps.oathtool = { type = "app"; program = "${pkgs.oath-toolkit}/bin/oathtool"; };
      packages.oathtool = pkgs.oath-toolkit;
      apps.alrecord = { type = "app"; program = "${pkgs.openal}/bin/alrecord"; };
      packages.alrecord = pkgs.openal;
      apps.altonegen = { type = "app"; program = "${pkgs.openal}/bin/altonegen"; };
      packages.altonegen = pkgs.openal;
      apps.openal-info = { type = "app"; program = "${pkgs.openal}/bin/openal-info"; };
      packages.openal-info = pkgs.openal;
      apps.ldapadd = { type = "app"; program = "${pkgs.openldap}/bin/ldapadd"; };
      packages.ldapadd = pkgs.openldap;
      apps.ldapcompare = { type = "app"; program = "${pkgs.openldap}/bin/ldapcompare"; };
      packages.ldapcompare = pkgs.openldap;
      apps.ldapdelete = { type = "app"; program = "${pkgs.openldap}/bin/ldapdelete"; };
      packages.ldapdelete = pkgs.openldap;
      apps.ldapexop = { type = "app"; program = "${pkgs.openldap}/bin/ldapexop"; };
      packages.ldapexop = pkgs.openldap;
      apps.ldapmodify = { type = "app"; program = "${pkgs.openldap}/bin/ldapmodify"; };
      packages.ldapmodify = pkgs.openldap;
      apps.ldapmodrdn = { type = "app"; program = "${pkgs.openldap}/bin/ldapmodrdn"; };
      packages.ldapmodrdn = pkgs.openldap;
      apps.ldappasswd = { type = "app"; program = "${pkgs.openldap}/bin/ldappasswd"; };
      packages.ldappasswd = pkgs.openldap;
      apps.ldapsearch = { type = "app"; program = "${pkgs.openldap}/bin/ldapsearch"; };
      packages.ldapsearch = pkgs.openldap;
      apps.ldapurl = { type = "app"; program = "${pkgs.openldap}/bin/ldapurl"; };
      packages.ldapurl = pkgs.openldap;
      apps.ldapvc = { type = "app"; program = "${pkgs.openldap}/bin/ldapvc"; };
      packages.ldapvc = pkgs.openldap;
      apps.ldapwhoami = { type = "app"; program = "${pkgs.openldap}/bin/ldapwhoami"; };
      packages.ldapwhoami = pkgs.openldap;
      apps.slapacl = { type = "app"; program = "${pkgs.openldap}/bin/slapacl"; };
      packages.slapacl = pkgs.openldap;
      apps.slapadd = { type = "app"; program = "${pkgs.openldap}/bin/slapadd"; };
      packages.slapadd = pkgs.openldap;
      apps.slapauth = { type = "app"; program = "${pkgs.openldap}/bin/slapauth"; };
      packages.slapauth = pkgs.openldap;
      apps.slapcat = { type = "app"; program = "${pkgs.openldap}/bin/slapcat"; };
      packages.slapcat = pkgs.openldap;
      apps.slapdn = { type = "app"; program = "${pkgs.openldap}/bin/slapdn"; };
      packages.slapdn = pkgs.openldap;
      apps.slapindex = { type = "app"; program = "${pkgs.openldap}/bin/slapindex"; };
      packages.slapindex = pkgs.openldap;
      apps.slapmodify = { type = "app"; program = "${pkgs.openldap}/bin/slapmodify"; };
      packages.slapmodify = pkgs.openldap;
      apps.slappasswd = { type = "app"; program = "${pkgs.openldap}/bin/slappasswd"; };
      packages.slappasswd = pkgs.openldap;
      apps.slapschema = { type = "app"; program = "${pkgs.openldap}/bin/slapschema"; };
      packages.slapschema = pkgs.openldap;
      apps.slaptest = { type = "app"; program = "${pkgs.openldap}/bin/slaptest"; };
      packages.slaptest = pkgs.openldap;
      apps.c_rehash = { type = "app"; program = "${pkgs.openssl}/bin/c_rehash"; };
      packages.c_rehash = pkgs.openssl;
      apps.openssl = { type = "app"; program = "${pkgs.openssl}/bin/openssl"; };
      packages.openssl = pkgs.openssl;
      apps.overmind = { type = "app"; program = "${pkgs.overmind}/bin/overmind"; };
      packages.overmind = pkgs.overmind;
      apps.env_parallel = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel"; };
      packages.env_parallel = pkgs.parallel;
      apps."env_parallel.ash" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.ash"; };
      packages."env_parallel.ash" = pkgs.parallel;
      apps."env_parallel.bash" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.bash"; };
      packages."env_parallel.bash" = pkgs.parallel;
      apps."env_parallel.csh" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.csh"; };
      packages."env_parallel.csh" = pkgs.parallel;
      apps."env_parallel.dash" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.dash"; };
      packages."env_parallel.dash" = pkgs.parallel;
      apps."env_parallel.fish" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.fish"; };
      packages."env_parallel.fish" = pkgs.parallel;
      apps."env_parallel.ksh" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.ksh"; };
      packages."env_parallel.ksh" = pkgs.parallel;
      apps."env_parallel.mksh" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.mksh"; };
      packages."env_parallel.mksh" = pkgs.parallel;
      apps."env_parallel.pdksh" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.pdksh"; };
      packages."env_parallel.pdksh" = pkgs.parallel;
      apps."env_parallel.sh" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.sh"; };
      packages."env_parallel.sh" = pkgs.parallel;
      apps."env_parallel.tcsh" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.tcsh"; };
      packages."env_parallel.tcsh" = pkgs.parallel;
      apps."env_parallel.zsh" = { type = "app"; program = "${pkgs.parallel}/bin/env_parallel.zsh"; };
      packages."env_parallel.zsh" = pkgs.parallel;
      apps.niceload = { type = "app"; program = "${pkgs.parallel}/bin/niceload"; };
      packages.niceload = pkgs.parallel;
      apps.parallel = { type = "app"; program = "${pkgs.parallel}/bin/parallel"; };
      packages.parallel = pkgs.parallel;
      apps.parcat = { type = "app"; program = "${pkgs.parallel}/bin/parcat"; };
      packages.parcat = pkgs.parallel;
      apps.parset = { type = "app"; program = "${pkgs.parallel}/bin/parset"; };
      packages.parset = pkgs.parallel;
      apps.parsort = { type = "app"; program = "${pkgs.parallel}/bin/parsort"; };
      packages.parsort = pkgs.parallel;
      apps.sem = { type = "app"; program = "${pkgs.parallel}/bin/sem"; };
      packages.sem = pkgs.parallel;
      apps.sql = { type = "app"; program = "${pkgs.parallel}/bin/sql"; };
      packages.sql = pkgs.parallel;
      apps.pavucontrol = { type = "app"; program = "${pkgs.pavucontrol}/bin/pavucontrol"; };
      packages.pavucontrol = pkgs.pavucontrol;
      apps.pdfgrep = { type = "app"; program = "${pkgs.pdfgrep}/bin/pdfgrep"; };
      packages.pdfgrep = pkgs.pdfgrep;
      apps.pikchr = { type = "app"; program = "${pkgs.pikchr}/bin/pikchr"; };
      packages.pikchr = pkgs.pikchr;
      apps.pipectl = { type = "app"; program = "${pkgs.pipectl}/bin/pipectl"; };
      packages.pipectl = pkgs.pipectl;
      apps.pipx = { type = "app"; program = "${pkgs.pipx}/bin/pipx"; };
      packages.pipx = pkgs.pipx;
      apps.plantuml = { type = "app"; program = "${pkgs.plantuml-c4}/bin/plantuml"; };
      packages.plantuml = pkgs.plantuml-c4;
      apps.playerctl = { type = "app"; program = "${pkgs.playerctl}/bin/playerctl"; };
      packages.playerctl = pkgs.playerctl;
      apps.playerctld = { type = "app"; program = "${pkgs.playerctl}/bin/playerctld"; };
      packages.playerctld = pkgs.playerctl;
      apps.podman-compose = { type = "app"; program = "${pkgs.podman-compose}/bin/podman-compose"; };
      packages.podman-compose = pkgs.podman-compose;
      apps.podman-tui = { type = "app"; program = "${pkgs.podman-tui}/bin/podman-tui"; };
      packages.podman-tui = pkgs.podman-tui;
      apps.procodile = { type = "app"; program = "${pkgs.procodile}/bin/procodile"; };
      packages.procodile = pkgs.procodile;
      apps.pc = { type = "app"; program = "${pkgs.profile-cleaner}/bin/pc"; };
      packages.pc = pkgs.profile-cleaner;
      apps.profile-cleaner = { type = "app"; program = "${pkgs.profile-cleaner}/bin/profile-cleaner"; };
      packages.profile-cleaner = pkgs.profile-cleaner;
      apps.progress = { type = "app"; program = "${pkgs.progress}/bin/progress"; };
      packages.progress = pkgs.progress;
      apps.proxychains4 = { type = "app"; program = "${pkgs.proxychains-ng}/bin/proxychains4"; };
      packages.proxychains4 = pkgs.proxychains-ng;
      apps.proxychains4-daemon = { type = "app"; program = "${pkgs.proxychains-ng}/bin/proxychains4-daemon"; };
      packages.proxychains4-daemon = pkgs.proxychains-ng;
      apps.pulseaudio-ctl = { type = "app"; program = "${pkgs.pulseaudio-ctl}/bin/pulseaudio-ctl"; };
      packages.pulseaudio-ctl = pkgs.pulseaudio-ctl;
      apps.pv = { type = "app"; program = "${pkgs.pv}/bin/pv"; };
      packages.pv = pkgs.pv;
      apps.chardetect = { type = "app"; program = "${pkgs.python310Packages.chardet}/bin/chardetect"; };
      packages.chardetect = pkgs.python310Packages.chardet;
      apps.ftfy = { type = "app"; program = "${pkgs.python310Packages.ftfy}/bin/ftfy"; };
      packages.ftfy = pkgs.python310Packages.ftfy;
      apps.xattr = { type = "app"; program = "${pkgs.python310Packages.xattr}/bin/xattr"; };
      packages.xattr = pkgs.python310Packages.xattr;
      apps.radeontop = { type = "app"; program = "${pkgs.radeontop}/bin/radeontop"; };
      packages.radeontop = pkgs.radeontop;
      apps.rclone = { type = "app"; program = "${pkgs.rclone}/bin/rclone"; };
      packages.rclone = pkgs.rclone;
      apps.rfc = { type = "app"; program = "${pkgs.rfc}/bin/rfc"; };
      packages.rfc = pkgs.rfc;
      apps.rocm-smi = { type = "app"; program = "${pkgs.rocm-smi}/bin/rocm-smi"; };
      packages.rocm-smi = pkgs.rocm-smi;
      apps.ruff = { type = "app"; program = "${pkgs.ruff}/bin/ruff"; };
      packages.ruff = pkgs.ruff;
      apps.chpst = { type = "app"; program = "${pkgs.runit}/bin/chpst"; };
      packages.chpst = pkgs.runit;
      apps.runit = { type = "app"; program = "${pkgs.runit}/bin/runit"; };
      packages.runit = pkgs.runit;
      apps.runit-init = { type = "app"; program = "${pkgs.runit}/bin/runit-init"; };
      packages.runit-init = pkgs.runit;
      apps.runsv = { type = "app"; program = "${pkgs.runit}/bin/runsv"; };
      packages.runsv = pkgs.runit;
      apps.runsvchdir = { type = "app"; program = "${pkgs.runit}/bin/runsvchdir"; };
      packages.runsvchdir = pkgs.runit;
      apps.runsvdir = { type = "app"; program = "${pkgs.runit}/bin/runsvdir"; };
      packages.runsvdir = pkgs.runit;
      apps.sv = { type = "app"; program = "${pkgs.runit}/bin/sv"; };
      packages.sv = pkgs.runit;
      apps.svlogd = { type = "app"; program = "${pkgs.runit}/bin/svlogd"; };
      packages.svlogd = pkgs.runit;
      apps.utmpset = { type = "app"; program = "${pkgs.runit}/bin/utmpset"; };
      packages.utmpset = pkgs.runit;
      apps.shellcheck = { type = "app"; program = "${pkgs.shellcheck}/bin/shellcheck"; };
      packages.shellcheck = pkgs.shellcheck;
      apps.shellharden = { type = "app"; program = "${pkgs.shellharden}/bin/shellharden"; };
      packages.shellharden = pkgs.shellharden;
      apps.shfmt = { type = "app"; program = "${pkgs.shfmt}/bin/shfmt"; };
      packages.shfmt = pkgs.shfmt;
      apps.sqlar = { type = "app"; program = "${pkgs.sqlar}/bin/sqlar"; };
      packages.sqlar = pkgs.sqlar;
      apps.sqlarfs = { type = "app"; program = "${pkgs.sqlar}/bin/sqlarfs"; };
      packages.sqlarfs = pkgs.sqlar;
      apps.sqldiff = { type = "app"; program = "${pkgs.sqldiff}/bin/sqldiff"; };
      packages.sqldiff = pkgs.sqldiff;
      apps.sqlite3_analyzer = { type = "app"; program = "${pkgs.sqlite-analyzer}/bin/sqlite3_analyzer"; };
      packages.sqlite3_analyzer = pkgs.sqlite-analyzer;
      apps.sqlite3 = { type = "app"; program = "${pkgs.sqlite-interactive}/bin/sqlite3"; };
      packages.sqlite3 = pkgs.sqlite-interactive;
      apps.sqlite-utils = { type = "app"; program = "${pkgs.sqlite-utils}/bin/sqlite-utils"; };
      packages.sqlite-utils = pkgs.sqlite-utils;
      apps.stc = { type = "app"; program = "${pkgs.stc-cli}/bin/stc"; };
      packages.stc = pkgs.stc-cli;
      apps.strace = { type = "app"; program = "${pkgs.strace}/bin/strace"; };
      packages.strace = pkgs.strace;
      apps.strace-log-merge = { type = "app"; program = "${pkgs.strace}/bin/strace-log-merge"; };
      packages.strace-log-merge = pkgs.strace;
      apps.syncthing = { type = "app"; program = "${pkgs.syncthing}/bin/syncthing"; };
      packages.syncthing = pkgs.syncthing;
      apps.jar = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jar"; };
      packages.jar = pkgs.temurin-bin-17;
      apps.jarsigner = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jarsigner"; };
      packages.jarsigner = pkgs.temurin-bin-17;
      apps.java = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/java"; };
      packages.java = pkgs.temurin-bin-17;
      apps.javac = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/javac"; };
      packages.javac = pkgs.temurin-bin-17;
      apps.javadoc = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/javadoc"; };
      packages.javadoc = pkgs.temurin-bin-17;
      apps.javap = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/javap"; };
      packages.javap = pkgs.temurin-bin-17;
      apps.jcmd = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jcmd"; };
      packages.jcmd = pkgs.temurin-bin-17;
      apps.jconsole = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jconsole"; };
      packages.jconsole = pkgs.temurin-bin-17;
      apps.jdb = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jdb"; };
      packages.jdb = pkgs.temurin-bin-17;
      apps.jdeprscan = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jdeprscan"; };
      packages.jdeprscan = pkgs.temurin-bin-17;
      apps.jdeps = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jdeps"; };
      packages.jdeps = pkgs.temurin-bin-17;
      apps.jfr = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jfr"; };
      packages.jfr = pkgs.temurin-bin-17;
      apps.jhsdb = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jhsdb"; };
      packages.jhsdb = pkgs.temurin-bin-17;
      apps.jimage = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jimage"; };
      packages.jimage = pkgs.temurin-bin-17;
      apps.jinfo = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jinfo"; };
      packages.jinfo = pkgs.temurin-bin-17;
      apps.jlink = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jlink"; };
      packages.jlink = pkgs.temurin-bin-17;
      apps.jmap = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jmap"; };
      packages.jmap = pkgs.temurin-bin-17;
      apps.jmod = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jmod"; };
      packages.jmod = pkgs.temurin-bin-17;
      apps.jpackage = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jpackage"; };
      packages.jpackage = pkgs.temurin-bin-17;
      apps.jps = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jps"; };
      packages.jps = pkgs.temurin-bin-17;
      apps.jrunscript = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jrunscript"; };
      packages.jrunscript = pkgs.temurin-bin-17;
      apps.jshell = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jshell"; };
      packages.jshell = pkgs.temurin-bin-17;
      apps.jstack = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jstack"; };
      packages.jstack = pkgs.temurin-bin-17;
      apps.jstat = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jstat"; };
      packages.jstat = pkgs.temurin-bin-17;
      apps.jstatd = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/jstatd"; };
      packages.jstatd = pkgs.temurin-bin-17;
      apps.keytool = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/keytool"; };
      packages.keytool = pkgs.temurin-bin-17;
      apps.rmiregistry = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/rmiregistry"; };
      packages.rmiregistry = pkgs.temurin-bin-17;
      apps.serialver = { type = "app"; program = "${pkgs.temurin-bin-17}/bin/serialver"; };
      packages.serialver = pkgs.temurin-bin-17;
      apps.tesseract = { type = "app"; program = "${pkgs.tesseract}/bin/tesseract"; };
      packages.tesseract = pkgs.tesseract;
      apps.transmission-cli = { type = "app"; program = "${pkgs.transmission}/bin/transmission-cli"; };
      packages.transmission-cli = pkgs.transmission;
      apps.transmission-create = { type = "app"; program = "${pkgs.transmission}/bin/transmission-create"; };
      packages.transmission-create = pkgs.transmission;
      apps.transmission-daemon = { type = "app"; program = "${pkgs.transmission}/bin/transmission-daemon"; };
      packages.transmission-daemon = pkgs.transmission;
      apps.transmission-edit = { type = "app"; program = "${pkgs.transmission}/bin/transmission-edit"; };
      packages.transmission-edit = pkgs.transmission;
      apps.transmission-remote = { type = "app"; program = "${pkgs.transmission}/bin/transmission-remote"; };
      packages.transmission-remote = pkgs.transmission;
      apps.transmission-show = { type = "app"; program = "${pkgs.transmission}/bin/transmission-show"; };
      packages.transmission-show = pkgs.transmission;
      apps.uni = { type = "app"; program = "${pkgs.uni}/bin/uni"; };
      packages.uni = pkgs.uni;
      apps.unpaper = { type = "app"; program = "${pkgs.unpaper}/bin/unpaper"; };
      packages.unpaper = pkgs.unpaper;
      apps.upnp-router-control = { type = "app"; program = "${pkgs.upnp-router-control}/bin/upnp-router-control"; };
      packages.upnp-router-control = pkgs.upnp-router-control;
      apps.vips = { type = "app"; program = "${pkgs.vips}/bin/vips"; };
      packages.vips = pkgs.vips;
      apps.vipsedit = { type = "app"; program = "${pkgs.vips}/bin/vipsedit"; };
      packages.vipsedit = pkgs.vips;
      apps.vipsheader = { type = "app"; program = "${pkgs.vips}/bin/vipsheader"; };
      packages.vipsheader = pkgs.vips;
      apps.vipsprofile = { type = "app"; program = "${pkgs.vips}/bin/vipsprofile"; };
      packages.vipsprofile = pkgs.vips;
      apps.vipsthumbnail = { type = "app"; program = "${pkgs.vips}/bin/vipsthumbnail"; };
      packages.vipsthumbnail = pkgs.vips;
      apps.wayland-info = { type = "app"; program = "${pkgs.wayland-utils}/bin/wayland-info"; };
      packages.wayland-info = pkgs.wayland-utils;
      apps.waypipe = { type = "app"; program = "${pkgs.waypipe}/bin/waypipe"; };
      packages.waypipe = pkgs.waypipe;
      apps.wl-copy = { type = "app"; program = "${pkgs.wl-clipboard}/bin/wl-copy"; };
      packages.wl-copy = pkgs.wl-clipboard;
      apps.wl-paste = { type = "app"; program = "${pkgs.wl-clipboard}/bin/wl-paste"; };
      packages.wl-paste = pkgs.wl-clipboard;
      apps.wlrctl = { type = "app"; program = "${pkgs.wlrctl}/bin/wlrctl"; };
      packages.wlrctl = pkgs.wlrctl;
      apps.wmctrl = { type = "app"; program = "${pkgs.wmctrl}/bin/wmctrl"; };
      packages.wmctrl = pkgs.wmctrl;
      apps.wtype = { type = "app"; program = "${pkgs.wtype}/bin/wtype"; };
      packages.wtype = pkgs.wtype;
      apps.zathura = { type = "app"; program = "${pkgs.zathura}/bin/zathura"; };
      packages.zathura = pkgs.zathura;
      apps.pzstd = { type = "app"; program = "${pkgs.zstd}/bin/pzstd"; };
      packages.pzstd = pkgs.zstd;
      apps.unzstd = { type = "app"; program = "${pkgs.zstd}/bin/unzstd"; };
      packages.unzstd = pkgs.zstd;
      apps.zstd = { type = "app"; program = "${pkgs.zstd}/bin/zstd"; };
      packages.zstd = pkgs.zstd;
      apps.zstdcat = { type = "app"; program = "${pkgs.zstd}/bin/zstdcat"; };
      packages.zstdcat = pkgs.zstd;
      apps.zstdgrep = { type = "app"; program = "${pkgs.zstd}/bin/zstdgrep"; };
      packages.zstdgrep = pkgs.zstd;
      apps.zstdless = { type = "app"; program = "${pkgs.zstd}/bin/zstdless"; };
      packages.zstdless = pkgs.zstd;
      apps.zstdmt = { type = "app"; program = "${pkgs.zstd}/bin/zstdmt"; };
      packages.zstdmt = pkgs.zstd;

      # special case for git-gui, from /libexec/git-core/git-gui
      apps.git-gui = { type = "app"; program = "${pkgs.gitFull}/libexec/git-core/git-gui"; };
      packages.git-gui = pkgs.gitFull;
    });
}
