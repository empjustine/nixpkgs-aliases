{"available":true,"broken":false,"description":"Helps you figure out when and why a commit was merged into a branch","homepage":"https://github.com/mhagger/git-when-merged","insecure":false,"license":{"deprecated":false,"free":true,"fullName":"GNU General Public License v2.0 only","redistributable":true,"shortName":"gpl2Only","spdxId":"GPL-2.0-only","url":"https://spdx.org/licenses/GPL-2.0-only.html"},"longDescription":"If you use standard Git workflows, then you create a feature\nbranch for each feature that you are working on. When the feature\nis complete, you merge it into your master branch. You might even\nhave sub-feature branches that are merged into a feature branch\nbefore the latter is merged.\n\nIn such a workflow, the first-parent history of master consists\nmainly of merges of feature branches into the mainline. git\nwhen-merged can be used to ask, \"When (and why) was commit C\nmerged into the current branch?\"\n","maintainers":[{"email":"damien@cassou.me","github":"DamienCassou","githubId":217543,"name":"Damien Cassou"}],"name":"git-when-merged-1.2.0","outputsToInstall":["out"],"platforms":["aarch64-linux","armv5tel-linux","armv6l-linux","armv7a-linux","armv7l-linux","i686-linux","loongarch64-linux","m68k-linux","microblaze-linux","microblazeel-linux","mipsel-linux","mips64el-linux","powerpc64-linux","powerpc64le-linux","riscv32-linux","riscv64-linux","s390-linux","s390x-linux","x86_64-linux","x86_64-darwin","i686-darwin","aarch64-darwin","armv7a-darwin"],"position":"/nix/store/3s69yxbbl116zwga3i6cy7prplywq0bn-source/pkgs/applications/version-management/git-when-merged/default.nix:21","unfree":false,"unsupported":false}
